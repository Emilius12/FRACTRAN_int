#!/usr/bin/env python3

import sys
from collections import Counter

def prime_factors(n):
    factors = Counter()
    d = 2
    while n > 1:
        while n % d == 0:
            factors[d] += 1
            n //= d
        d += 1
        if d*d > n:
            if n > 1:
                factors[n] += 1
                break
    return dict(factors)

def interprete(frac_list, n):
    x = int(n)
    fractions = []
    for f in frac_list:
        num, den = map(int, f.strip().split("/"))
        fractions.append((num, den))
    while True:
        applied = False
        for num, den in fractions:
            if (x * num) % den == 0:
                x = (x * num) // den
                applied = True
                break
        if not applied:
            break
    return prime_factors(x)

def main():
    if len(sys.argv) != 2:
        print("Usage: frac <nom_du_fichier>")
        sys.exit(1)
    prog_file = sys.argv[1]
    try:
        with open(prog_file, "r") as f:
            frac_list = f.readline().strip().split(",")
            n = f.readline().strip()
    except Exception as e:
        print(f"Erreur lors de la lecture du fichier : {e}")
        sys.exit(1)

    factors = interprete(frac_list, n)
    if factors:
        result_str = " * ".join(f"{p}^{e}" if e > 1 else f"{p}" for p, e in sorted(factors.items()))
        print(result_str)
    else:
        print("0")  # ou "1" si tu consid√®res que le produit vide = 1

if __name__ == "__main__":
    main()